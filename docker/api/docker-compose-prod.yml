version: "3.9"

services:

  redis_notifications:
    build:
      context: ../..
      dockerfile: ./docker/api/redis/Dockerfile
    container_name: redis_notifications
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "ping", "|", "grep", "PONG" ]
      interval: 3s
      retries: 3
    networks:
      - prod_network_notifications
    env_file:
      - ../../.envs/.prod/.redis

  api_notifications:
    build:
      context: ../..
      dockerfile: ./docker/api/Dockerfile
      args:
        - BUILD_ENV=prod
    container_name: api_notifications
    command: /start_prod
    volumes:
      - static_files_notifications_volume:/app/staticfiles
      - media_files_notifications_volume:/app/mediafiles
      - postgres_backups_notifications_volume:/app/staticfiles/backups
      - ../..:/app
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail -f http://$$API_SEARCH_HOST:$$API_SEARCH_PORT/docs" ]
      interval: 3s
      retries: 3
    env_file:
      - ../../.envs/.prod/.postgres
      - ../../.envs/.prod/.api
      - ../../.envs/.prod/.redis
    networks:
      - prod_network_notifications
      - shared_network
    expose:
      - "8083"

  nginx_notifications:
    restart: always
    build:
      context: ../..
      dockerfile: ./docker/api/nginx/Dockerfile
    container_name: nginx_notifications
    env_file:
      - ../../.envs/.prod/.api
    volumes:
      - static_files_notifications_volume:/app/staticfiles
      - media_files_notifications_volume:/app/mediafiles
    depends_on:
      - api_notifications
    networks:
      - prod_network_notifications
      - shared_network


networks:
  prod_network_notifications:
    driver: bridge
  shared_network:
    external: true

volumes:
  static_files_notifications_volume:
  media_files_notifications_volume:
  postgres_backups_notifications_volume:
